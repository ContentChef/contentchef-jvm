//See https://getstream.io/blog/publishing-libraries-to-mavencentral-2021 for info

apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'org.jetbrains.dokka'

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.java.srcDirs
    from sourceSets.main.kotlin.srcDirs
}

tasks.withType(dokkaHtmlPartial.getClass()).configureEach {
    pluginsMapConfiguration.set(
            ["org.jetbrains.dokka.base.DokkaBase": """{ "separateInheritedMembers": true}"""]
    )
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from dokkaJavadoc.outputDirectory
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def PUBLISH_GROUP_ID = 'io.contentchef'
def PUBLISH_VERSION = '1.3.0'
group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                // The coordinates of the library
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID
                version PUBLISH_VERSION
                from components.java
                artifact sourcesJar
                artifact javadocJar

                // Mostly self-explanatory metadata
                pom {
                    name = PUBLISH_ARTIFACT_ID
                    description = PUBLISH_ARTIFACT_DESCRIPTION
                    url = 'https://github.com/ContentChef/contentchef-jvm'
                    licenses {
                        license {
                            name = 'Apache-2.0'
                            url = 'https://github.com/ContentChef/contentchef-jvm/blob/master/LICENSE'
                        }
                    }
                    developers {
                        developer {
                            id = 'apalumbo'
                            name = "Alessandro Palumbo"
                        }
                        developer {
                            id = 'e-papa'
                            name = 'Emanuele Papa'
                        }
                        // Add all other devs here...
                    }

                    // Version control info - if you're using GitHub, follow the
                    // format as seen here
                    scm {
                        connection = 'scm:git:github.com/ContentChef/contentchef-jvm.git'
                        developerConnection = 'scm:git:ssh://github.com/ContentChef/contentchef-jvm.git'
                        url = 'https://github.com/ContentChef/contentchef-jvm/tree/master'
                    }
                }
            }
        }
    }
}

ext["signing.keyId"] = rootProject.ext["signing.keyId"]
ext["signing.password"] = rootProject.ext["signing.password"]
ext["signing.secretKeyRingFile"] = rootProject.ext["signing.secretKeyRingFile"]

signing {
    sign publishing.publications
}